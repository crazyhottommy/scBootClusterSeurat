
## set up parameters
######################################################################

############     Bootstrap related parameters        #################

######################################################################
input_seurat: "seurat_obj.rds"
subsample_rate: 0.8
num_of_bootstrap: 20

bootstrap_k: False
bootstrap_ks: "8 10 12 14 16"

bootstrap_resolution: False
bootstrap_resolutions: "0.6 0.8 1 1.2 1.4"

## if set to True, all the combinations of k and resolution will be 
## bootstrapped 
bootstrap_k_and_resolution: False

######################################################################

############     scclusteval package related parameters   ############

######################################################################

## those are parameters for functions from  Seurat package 
## preprocessSubsetData is a wrapper.

## you should leave k out, k will be used from bootstrap_ks specified above
## library(scclusteval)
## ?PreprocessSubsetData   you can also set pc.use = 20 to skip the JackStraw which was used to determine the best PCs to use
PreprocessSubsetData_bootstrap_k_pars: "variable.features.n = 3000, num.pc = 20, workers = 8, score.thresh = 1e-5, n.start = 100, nn.eps = 0, resolution = 0.8"

## you should leave resolution out. resolution will be used from bootstrap_resolutions specified above
PreprocessSubsetData_bootstrap_resolution_pars: "variable.features.n = 3000, num.pc = 20, workers = 8, score.thresh = 1e-5, n.start = 100, nn.eps = 0, k.param = 30"

## you should leave resolution and k.param out.
PreprocessSubsetData_bootstrap_k_and_resolution_pars: "variable.features.n = 3000, num.pc = 20, workers = 8, score.thresh = 1e-5, n.start = 100, nn.eps = 0"


CLUSTER_JSON: './cluster.json'





